name: Colab Automation Every 17 Minutes

on:
  schedule:
    # Runs every 17 minutes during work hours (8 AM - 6 PM UTC)
    - cron: '0,17,34,51 8-18 * * 1-5'  # Mon-Fri, every 17 min, 8-6 PM
  workflow_dispatch:  # Allows manual triggering

jobs:
  run-automation:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v3
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
        fetch-depth: 0
      
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.9'
        
    - name: Install Chrome
      run: |
        sudo apt-get update
        sudo apt-get install -y google-chrome-stable
        
    - name: Install Python dependencies
      run: |
        pip install -r requirements.txt
        
    - name: Check existing state file
      run: |
        if [ -f automation_state.json ]; then
          echo "‚úÖ Previous state file found in repository"
          cat automation_state.json
        else
          echo "üìù No previous state file found - creating default"
          echo '{"current_project": null, "current_sample_index": 0, "processed_samples": [], "failed_samples": [], "completed_projects": [], "last_run_time": null, "total_samples_processed": 0}' > automation_state.json
        fi
        
    - name: Run automation script with real UK timing
      run: python automation_script.py
      
    - name: Commit updated state file
      run: |
        git config --local user.email "action@github.com"
        git config --local user.name "GitHub Action"
        
        # Add the updated state file
        git add automation_state.json
        
        # Check if there are changes to commit
        if git diff --staged --quiet; then
          echo "No changes to commit"
        else
          # Create commit with timestamp
          TIMESTAMP=$(date -u +"%Y-%m-%d %H:%M:%S UTC")
          git commit -m "Update automation state - $TIMESTAMP"
          
          # Push changes back to repository
          git push
          
          echo "‚úÖ State file committed and pushed to repository"
        fi
        
    - name: Notify on failure
      if: failure()
      run: |
        echo "‚ùå Automation failed at $(date)"
        # Even on failure, try to commit any state changes
        git config --local user.email "action@github.com"
        git config --local user.name "GitHub Action"
        git add automation_state.json || true
        git commit -m "Update automation state - FAILED RUN $(date -u)" || true
        git push || true
